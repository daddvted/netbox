FROM ubuntu:23.04 as builder

COPY patch/sources.list /etc/apt/sources.list
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get update -qq \
    && apt-get upgrade \
      --yes -qq --no-install-recommends \
    && apt-get install \
      --yes -qq --no-install-recommends \
      build-essential \
      ca-certificates \
      libldap-dev \
      libpq-dev \
      libsasl2-dev \
      libssl-dev \
      libxml2-dev \
      libxmlsec1 \
      libxmlsec1-dev \
      libxmlsec1-openssl \
      libxslt-dev \
      pkg-config \
      python3-dev \
      python3-pip \
      python3-venv \
    && python3 -m venv /opt/netbox/venv \
    && /opt/netbox/venv/bin/python3 -m pip install -i http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com --upgrade \
      pip \
      setuptools \
      wheel

COPY requirements.txt requirements-container.txt /
RUN \
    # We compile 'psycopg' in the build process
    sed -i -e '/psycopg/d' /requirements.txt && \
    # Gunicorn is not needed because we use Nginx Unit
    # sed -i -e '/gunicorn/d' /requirements.txt && \
    # We need 'social-auth-core[all]' in the Docker image. But if we put it in our own requirements-container.txt
    # we have potential version conflicts and the build will fail.
    # That's why we just replace it in the original requirements.txt.
    sed -i -e 's/social-auth-core\[openidconnect\]/social-auth-core\[all\]/g' /requirements.txt && \
    /opt/netbox/venv/bin/pip install -i http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com\
      -r /requirements.txt \
      -r /requirements-container.txt

# ================
# Main stage
# ================

FROM ubuntu:23.04 as main

COPY patch/sources.list /etc/apt/sources.list
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get update -qq \
    && apt-get upgrade \
      --yes -qq --no-install-recommends \
    && apt-get install \
      --yes -qq --no-install-recommends \
      bzip2 \
      ca-certificates \
      curl \
      libldap-common \
      libpq5 \
      libxmlsec1-openssl \
      openssh-client \
      openssl \
      python3 \
      python3-distutils \
      nginx \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /opt/netbox/venv /opt/netbox/venv
COPY nginx.conf /etc/nginx/nginx.conf
